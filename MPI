import mpi.*;

public class Dist {
    public static void main(String[] args) throws MPIException {
        // Initialize MPI
        MPI.Init(args);

        // Get the rank and size (number of processes)
        int rank = MPI.COMM_WORLD.Rank();
        int size = MPI.COMM_WORLD.Size();

        // Define the total number of elements in the array
        int totalSize = 12;
        int[] array = new int[totalSize];

        // Only the root process (rank 0) initializes the array
        if (rank == 0) {
            // Fill the array with some values (e.g., 1 to 12)
            for (int i = 0; i < totalSize; i++) {
                array[i] = i + 1;
            }
        }

        // Print the original array from the root process
        if (rank == 0) {
            System.out.print("Original Array: ");
            for (int i = 0; i < totalSize; i++) {
                System.out.print(array[i] + " ");
            }
            System.out.println();
        }

        // Determine how many elements each process will handle
        int localSize = totalSize / size;
        int[] localArray = new int[localSize];

        // Scatter the array from root to all processes
        MPI.COMM_WORLD.Scatter(array, 0, localSize, MPI.INT, localArray, 0, localSize, MPI.INT, 0);

        // Each process calculates the sum of its portion of the array
        int localSum = 0;
        for (int i = 0; i < localSize; i++) {
            localSum += localArray[i];
        }

        // Reduce: Gather all local sums to process 0
        int[] globalSum = new int[1];  // To store the final sum
        MPI.COMM_WORLD.Reduce(new int[]{localSum}, 0, globalSum, 0, 1, MPI.INT, MPI.SUM, 0);

        // Print the result on the root process (rank 0)
        if (rank == 0) {
            System.out.println("Total Sum: " + globalSum[0]);
        }

        // Finalize MPI
        MPI.Finalize();
    }
}

----------------------------------
steps:

1) download MPJ express
2) extract the tar file
3) nano ~/.bashrc
4) export MPJ_HOME=/home/darshan/Downloads/mpj-v0_44
   export PATH=$MPJ_HOME/bin:$PATH
   export CLASSPATH=$CLASSPATH:$MPJ_HOME/lib/mpj.jar
5) source ~/.bashrc
6) 
7) go to project -> build path -> libraries -> add external libraries -> mpj file/lib/mpj.jar -> add it to path
go to project -> run configuration -> environment-> 
MPJ_HOME:

    Path: /home/Downloads/mpj-v0_44

PATH:

    Add to PATH: /home/Downloads/mpj-v0_44/bin
    
-----------------------------------------
output:

darshan@darshan-Inspiron-3584:~/MPI/src$ cd /home/darshan/MPI/src/
darshan@darshan-Inspiron-3584:~/MPI/src$ javac -cp /home/darshan/Downloads/mpj-v0_44/lib/mpj.jar Dist.java
darshan@darshan-Inspiron-3584:~/MPI/src$ mpjrun.sh -np 4 Dist
MPJ Express (0.44) is started in the multicore configuration
Original Array: 1 2 3 4 5 6 7 8 9 10 11 12 
Total Sum: 78
